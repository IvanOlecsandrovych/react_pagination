{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","calcPages","totalItems","itemsPerPage","calcStartItem","page","calcEndItem","Pagination","total","perPage","currentPage","onPageChange","pages","className","cn","disabled","href","onClick","map","active","item","App","options","useState","setCurrentPage","setPerPage","startItem","endItem","info","id","onChange","event","target","value","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EAGF,IAAMG,EAAY,SAACC,EAAoBC,GAC5C,OAAID,EAAaC,GACPD,EAAcA,EAAaC,GAAiBA,EAAe,EAG9DD,EAAaC,GAGTC,EAAgB,SAACC,EAAcF,GAC1C,OAAgB,IAATE,GACFA,EAAO,GAAKF,EAAe,EAC5B,GAGOG,EAAc,SACzBD,EACAF,EACAD,GAEA,OAAIG,IAASJ,EAAUC,EAAYC,IACxBE,EAAO,GAAKF,EAAgBA,EAGhCD,G,uBCjBIK,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAUO,EAAOC,GAE/B,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAAS,kBAAMN,EAAaD,EAAc,IAL5C,oBAUDf,EAAW,EAAGiB,GAAOM,KAAI,SAAAb,GAAI,OAC5B,oBAEEQ,UAAWC,IAAG,YAAa,CACzBK,OAAQT,IAAgBL,IAH5B,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMX,GACVY,QAAS,kBAAMN,EAAaN,IAJ9B,SAMGA,KAXEA,MAeT,oBAAIQ,UAAWC,IAAG,YAAa,CAC7BC,SAAUL,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeN,IAAgBE,EAC/BK,QAAS,kBAAMN,EAAaD,EAAc,IAL5C,uBAWJ,6BACGf,EACCS,EAAcM,EAAaD,GAC3BH,EAAYI,EAAaD,EAASD,IAClCU,KAAI,SAAAE,GAAI,OACR,oBAAe,UAAQ,OAAvB,wBAAuCA,IAA9BA,YCvENC,EAAgB,WAC3B,IAAMC,EAAU,CAAC,EAAG,EAAG,GAAI,IAE3B,EAAsCC,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBc,EAApB,KACA,EAA8BD,mBAASD,EAAQ,IAA/C,mBAAOb,EAAP,KAAgBgB,EAAhB,KAEMb,EAAQX,EARF,GAQmBQ,GAOzBiB,EAAYtB,EAAcM,EAAaD,GACvCkB,EAAUrB,EAAYI,EAAaD,EAhB7B,IAkBNmB,EAAI,eAAWlB,EAAX,mBAAiCgB,EAAjC,cAAgDC,EAAhD,eAlBE,GAkBF,KAQV,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGe,IAGH,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,SA9BW,SAACC,GACpBN,GAAYM,EAAMC,OAAOC,OACzBT,EAAe,IA6BPS,MAAOxB,EALT,SAOGa,EAAQJ,KAAI,SAAAgB,GAAM,OACjB,wBAEED,MAAOC,EAFT,SAIGA,GAHIA,UASb,uBAAOC,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MA5DM,GA6DNC,QAASA,EACTC,YAAaA,EACbC,aA3Ce,SAACN,GAChBA,EAAO,GAAKA,GAAQO,GACtBY,EAAenB,UCxBrB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f95ca97b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const calcPages = (totalItems: number, itemsPerPage: number): number => {\n  if (totalItems % itemsPerPage) {\n    return (totalItems - (totalItems % itemsPerPage)) / itemsPerPage + 1;\n  }\n\n  return totalItems / itemsPerPage;\n};\n\nexport const calcStartItem = (page: number, itemsPerPage: number) => {\n  return page !== 1\n    ? (page - 1) * itemsPerPage + 1\n    : 1;\n};\n\nexport const calcEndItem = (\n  page: number,\n  itemsPerPage: number,\n  totalItems: number,\n) => {\n  if (page !== calcPages(totalItems, itemsPerPage)) {\n    return ((page - 1) * itemsPerPage) + itemsPerPage;\n  }\n\n  return totalItems;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport {\n  calcEndItem,\n  calcPages,\n  calcStartItem,\n  getNumbers,\n} from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = calcPages(total, perPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {getNumbers(1, pages).map(page => (\n          <li\n            key={page}\n            className={cn('page-item', {\n              active: currentPage === page,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item', {\n          disabled: currentPage === pages,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pages}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {getNumbers(\n          calcStartItem(currentPage, perPage),\n          calcEndItem(currentPage, perPage, total),\n        ).map(item => (\n          <li key={item} data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { calcEndItem, calcPages, calcStartItem } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const options = [3, 5, 10, 20];\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(options[1]);\n\n  const pages = calcPages(total, perPage);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const startItem = calcStartItem(currentPage, perPage);\n  const endItem = calcEndItem(currentPage, perPage, total);\n\n  const info = `Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`;\n\n  const onPageChange = (page: number) => {\n    if (page > 0 && page <= pages) {\n      setCurrentPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {info}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={perPage}\n          >\n            {options.map(option => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}